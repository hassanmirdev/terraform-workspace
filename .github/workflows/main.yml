name: Automate AWS Infrastructure Deployment

on:
 workflow_dispatch
#  push:
 #   branches:
  #    - main
  # pull_request:
   # branches:
    #  - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
         ref: 'main'

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.10.3  # Adjust this to the Terraform version you need
          
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
      - name: configure git
        run: |
          git config --global user.email "hassan.mirsf@gmail.com"
          git config --global user.name "hassanmirdev"
      
     # - name: install lfs
      #  run: |
      #   git lfs install
       #  git lfs track ".terraform/**/*"
        # git add .gitattributes
        # git commit -m "Add .terraform files to Git LFS"
        # git push origin main


      # Initialize Terraform
      - name: Initialize Terraform
        run: | 
         rm -rf .terraform
         terraform init
       
         

      # Generate Terraform Plan
      - name: Generate Terraform Plan
        run: terraform plan -out=tfplan

      # Generate and push Terraform docs for Pull Request review
      
      
      - name: Generate Markdown with Terraform Docs
      #  if: ${{ github.event_name == 'pull_request' }}
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"
          git-push-user-name: "hassanmirdev"
          git-push-user-email: "hassan.mirsf@gmail.com"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Use the secret to authenticate

      # Apply the Terraform configuration to AWS
      - name: Apply Terraform Configuration
       # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} # Only apply on push to main branch (after PR merge)
        run: terraform apply -auto-approve tfplan
       
